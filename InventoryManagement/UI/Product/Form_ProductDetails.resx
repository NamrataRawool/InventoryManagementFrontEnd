<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_ProductImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAD//2Q==
</value>
  </data>
</root>